const a2020optionsObject=JSON.parse(a2020_settings_app_ajax.optionsObject),a2020postTypes=JSON.parse(a2020_settings_app_ajax.postTypes),a2020network=1==a2020_settings_app_ajax.network,a2020activated="true"==a2020_settings_app_ajax.activated;var mediaUploader;const a2020settings={data:()=>({loading:!0,screenWidth:window.innerWidth,settings:a2020optionsObject,activeTab:"admin2020_general",activated:a2020activated,search:{string:""}}),created:function(){window.addEventListener("resize",this.getScreenWidth)},computed:{filteredSearch(){return this.search.results}},mounted:function(){},methods:{getDataFromComp:(e,t)=>t,export_settings(){self=this,ALLoptions=JSON.stringify(self.settings);var e=new Date,t=String(e.getDate()).padStart(2,"0"),s=String(e.getMonth()+1).padStart(2,"0"),a=e.getFullYear();date_today=s+"_"+t+"_"+a,filename="admin2020_settings_"+date_today+".json";var n="data:text/json;charset=utf-8,"+encodeURIComponent(ALLoptions),i=document.getElementById("admin2020_download_settings");i.setAttribute("href",n),i.setAttribute("download",filename),i.click()},import_settings(){self=this;var e=jQuery("#admin2020_export_settings")[0].files[0];if("application/json"==e.type)if(e.size>1e5)window.alert("File is to big.");else{var t=document.getElementById("admin2020_export_settings").files[0],s=new FileReader;s.readAsText(t,"UTF-8"),s.onload=function(e){json_settings=e.target.result,parsed=JSON.parse(json_settings),null!=parsed?(self.settings=parsed,UIkit.notification("Settings imported",{pos:"bottom-left",status:"success"}),self.saveSettings()):UIkit.notification("something wrong",{pos:"bottom-left",status:"danger"})}}else window.alert("Please select a valid JSON file.")},saveSettings(){self=this,allsettings=self.settings,jQuery.ajax({url:a2020_settings_app_ajax.ajax_url,type:"post",data:{action:"a2020_save_settings_from_app",security:a2020_settings_app_ajax.security,allsettings:allsettings,a2020network:a2020network},success:function(e){data=JSON.parse(e),data.error?UIkit.notification(data.error,{pos:"bottom-left",status:"danger"}):UIkit.notification(data.message,{pos:"bottom-left",status:"success"})}})},reset_settings(){self=this,jQuery.ajax({url:a2020_settings_app_ajax.ajax_url,type:"post",data:{action:"a2020_reset_settings",security:a2020_settings_app_ajax.security,a2020network:a2020network},success:function(e){data=JSON.parse(e),data.error?UIkit.notification(data.error,{pos:"bottom-left",status:"danger"}):(UIkit.notification(data.message,{pos:"bottom-left",status:"success"}),location.reload())}})},getScreenWidth(){this.screenWidth=window.innerWidth},isSmallScreen(){return this.screenWidth<1e3},highlighter:e=>Prism.highlight(e,Prism.languages.js,"js"),removeLicence(){self=this,jQuery.ajax({url:a2020_settings_app_ajax.ajax_url,type:"post",data:{action:"a2020_remove_licence",security:a2020_settings_app_ajax.security,network:a2020network},success:function(e){data=JSON.parse(e),data.error?UIkit.notification(data.error,{pos:"bottom-left",status:"danger"}):(UIkit.notification(data.message,{pos:"bottom-left",status:"success"}),window.setInterval(()=>{location.reload()},500))}})},chooseImage(e){(mediaUploader=wp.media.frames.file_frame=wp.media({title:"Choose Image",button:{text:"Choose Image"},multiple:!1})).on("select",function(){var t=mediaUploader.state().get("selection").first().toJSON();e.value=t.url}),mediaUploader.open()},typeArray(e){Array.isArray(e)||(e=[])}}},a2020adminSettings=a2020Vue.createApp(a2020settings);a2020adminSettings.component("multi-select",{data:function(){return{thisSearchInput:"",options:[]}},props:{selected:Array,name:String,placeholder:String,single:Boolean},watch:{thisSearchInput:function(e,t){self=this,e.length>0&&jQuery.ajax({url:a2020_settings_app_ajax.ajax_url,type:"post",data:{action:"a2020_get_users_and_roles",security:a2020_settings_app_ajax.security,searchString:e},success:function(e){data=JSON.parse(e),data.error?UIkit.notification(data.error,{pos:"bottom-left",status:"danger"}):self.options=data.roles}})}},methods:{addSelected(e,t){1==this.single?t[0]=e:t.push(e)},removeSelected(e,t){const s=t.indexOf(e);s>-1&&(t=t.splice(s,1))},ifSelected:(e,t)=>!(t.indexOf(e)>-1),ifInSearch:(e,t)=>(item=e.toLowerCase(),string=t.toLowerCase(),!!item.includes(string))},template:'<div class="a2020-select-container">     <div class=" uk-flex uk-flex-wrap">    <span v-if="selected.length < 1" class="selected-item" style="background: none;">      <span class="uk-text-meta">{{name}}...</span>    </span>    <span v-if="selected.length > 0" v-for="select in selected" class="selected-item">       <div>         {{select}}      <a class="uk-margin-small-left" href="#" @click="removeSelected(select,selected)">x</a>       </div>    </span>    </div>  </div>  <div class="uk-dropdown wpteams-no-after a2020-available-container " uk-dropdown="pos:bottom-justify;mode:click;offset:10;">    <div class="uk-inline uk-width-1-1 wpteams-border uk-margin-small-bottom">    <span class="uk-form-icon" uk-icon="icon: search" style="\tleft: -8px;"></span>    <input class="uk-input uk-search-input " type="text" style="background: none;border:none;"     :placeholder="placeholder" v-model="thisSearchInput">    </div>    <div class="">    <template v-for="option in options">      <span  class="available-item"       @click="addSelected(option.name, selected)"       v-if="ifSelected(option.name, selected) && ifInSearch(option.name, thisSearchInput)"       style="cursor: pointer">      {{option.label}}      </span>    </template>    </div>  </div>    '}),a2020adminSettings.component("multi-select-posts",{data:function(){return{thisSearchInput:"",options:a2020postTypes}},props:{selected:Array,name:String,placeholder:String,single:Boolean},methods:{addSelected(e,t){1==this.single?t[0]=e:t.push(e)},removeSelected(e,t){const s=t.indexOf(e);s>-1&&(t=t.splice(s,1))},ifSelected:(e,t)=>!(t.indexOf(e)>-1),ifInSearch:(e,t)=>(item=e.toLowerCase(),string=t.toLowerCase(),!!item.includes(string))},template:'<div class="a2020-select-container">     <div class=" uk-flex uk-flex-wrap">    <span v-if="selected.length < 1" class="selected-item" style="background: none;">      <span class="uk-text-meta"> {{name}}...</span>    </span>    <span v-if="selected.length > 0" v-for="select in selected" class="selected-item">       <div>         {{select}}      <a class="uk-margin-small-left" href="#" @click="removeSelected(select,selected)">x</a>       </div>    </span>    </div>  </div>  <div class="uk-dropdown wpteams-no-after a2020-available-container " uk-dropdown="pos:bottom-justify;mode:click;offset:10;">    <div class="uk-inline uk-width-1-1 wpteams-border uk-margin-small-bottom">    <span class="uk-form-icon" uk-icon="icon: search" style="\tleft: -8px;"></span>    <input class="uk-input uk-search-input " type="text" style="background: none;border:none;"     :placeholder="placeholder" v-model="thisSearchInput">    </div>    <div class="">    <template v-for="option in options">      <span  class="available-item"       @click="addSelected(option.name, selected)"       v-if="ifSelected(option.name, selected) && ifInSearch(option.name, thisSearchInput)"       style="cursor: pointer">      {{option.label}}      </span>    </template>    </div>  </div>    '}),a2020adminSettings.component("font-select",{data:function(){return{fontSearch:"",options:[],allFontsData:[]}},props:{selected:Array,name:String,placeholder:String,single:Boolean},watch:{fontSearch:function(e,t){this.options=this.filterIt(this.allFontsData,this.fontSearch)},options:function(e,t){currentOptions=this.options.slice(0,20);for(let e=0;e<currentOptions.length;++e){currentFont=currentOptions[e];var s="@import url('https://fonts.googleapis.com/css2?family="+currentFont.fontName+"&display=swap');";jQuery("<style/>").append(s).appendTo(document.head)}}},mounted:function(){},computed:{runitonce(){this.queryFonts()},allFonts(){return this.runitonce,this.options.slice(0,30)}},methods:{queryFonts(){var e=this;jQuery.getJSON("https://www.googleapis.com/webfonts/v1/webfonts?sort=popularity&key=AIzaSyCsOWMT4eyd1vd4yN0-h7jZnXSCf2qDmio",function(t){allfonts=t.items,formattedFonts=[],jQuery.each(allfonts,function(e,t){temp=[],temp.fontName=t.family,temp.category=t.category,str="",font=str.concat("'",temp.fontName,"', ",temp.category),temp.fontFamily=font,formattedFonts.push(temp)}),listfonts=formattedFonts,e.allFontsData=listfonts,e.options=listfonts})},addSelected(e,t){1==this.single?t[0]=e:t.push(e)},filterIt:(e,t)=>e.filter(function(e){return Object.keys(e).some(function(s){return e[s].toLowerCase().includes(t.toLowerCase())})}),removeSelected(e,t){this.selected[0]="",this.selected[1]=""},ifSelected:(e,t)=>!(t.indexOf(e)>-1),ifInSearch:(e,t)=>(item=e.toLowerCase(),string=t.toLowerCase(),!!item.includes(string)),saveFont(e,t){this.selected[0]=e.fontName,this.selected[1]=e.category}},template:'<div class="a2020-select-container">     <div class=" uk-flex uk-flex-wrap">      <span v-if="!selected[0]" class="selected-item" style="background: none;">        <span class="uk-text-meta">Select {{name}}...</span>      </span>      <span v-if="selected[0]"  class="selected-item">        <div>          {{selected[0]}}          <a class="uk-margin-small-left" href="#" @click="removeSelected(select,selected)">x</a>        </div>      </span>    </div>  </div>  <div class="uk-dropdown wpteams-no-after a2020-available-container " uk-dropdown="pos:bottom-justify;mode:click;offset:10;">    <div class="uk-inline uk-width-1-1 wpteams-border uk-margin-small-bottom">      <span class="uk-form-icon" uk-icon="icon: search" style="\tleft: -8px;"></span>      <input class="uk-input uk-search-input " type="text" style="background: none;border:none;"       :placeholder="placeholder" v-model="fontSearch">    </div>    <div class="uk-height-medium uk-overflow-auto">      <ul v-for="option in allFonts">        <li @click="saveFont(option, selected)" class="a2020-font-medium" v-bind:style="{ \'font-family\': option.fontFamily}"><a href="#" class="uk-link-muted">{{option.fontName}}</a></li>      </ul>    </div>  </div>    '});const highlight=e=>{e.textContent=e.textContent,hljs.highlightBlock(e)};let editorOptions={tab:" ".repeat(2)};a2020adminSettings.component("code-flask",{data:function(){return{created:!1,unformatted:this.usercode}},props:{language:String,usercode:String},computed:{returnCode(){return this.unformatted}},mounted:function(){this.testel()},methods:{codeChange(e){this.$emit("code-change",e)},testel(){self=this;const e=this.$el;new CodeJar(e,highlight,editorOptions).onUpdate(e=>{this.codeChange(e)})}},template:'<div class="editor " :class="language"  data-gramm="false">{{returnCode}}</div> '}),a2020adminSettings.mount("#a2020-settings-app");